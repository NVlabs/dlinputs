#!/usr/bin/python3

from __future__ import print_function
import imp
import time
import argparse

import numpy as np
import pylab
import dlinputs as dli
import matplotlib
from pylab import *
from dlinputs import zcom, gopen, utils, tarrecords
import simplejson

# matplotlib.use("GTK")

rc("figure", figsize="12,6")
rc("image", cmap="gray")

parser = argparse.ArgumentParser("Display info about an input module.")
parser.add_argument("input")
parser.add_argument("-a", "--autodecode", action="store_true")
parser.add_argument("-f", "--fields", default=None)
args = parser.parse_args()

inputs = gopen.sharditerator_once(args.input)

if args.fields is not None:
    fields = args.fields.split(",")
else:
    fields = []

def info(x):
    if isinstance(x, np.ndarray):
        shape = ",".join([str(l) for l in x.shape])
        lo, med, hi = amin(x), median(x), amax(x)
        return "@{}[{:.2g}:{:.2g}:{:.2g}]".format(shape, lo, med, hi)
    if not isinstance(x, str):
        x = str(x)
    return x

for i, sample in enumerate(inputs):
    source = sample.get("__source__")
    key = sample.get("__key__")
    out = [source, key]
    for k in fields:
        out += [sample.get(k)]
    out = [info(x) for x in out]
    print("\t".join(out))
