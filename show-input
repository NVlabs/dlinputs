#!/usr/bin/python

import argparse
import glob
import imp
import os
import re
import time

import matplotlib
import numpy as np
import pylab
from pylab import *

import dlinputs as dli
from dlinputs import gopen
from dlinputs import utils
from dlinputs import zcom

# matplotlib.use("GTK")

rc("image", cmap="hot")
>>>>>>> 36dbf45c591a820a07a07994f8f41f474adf6d4f

parser = argparse.ArgumentParser("Display info about an input module.")
parser.add_argument("input")
parser.add_argument("-t", "--table", default="training")
parser.add_argument("-s", "--skip", default=0, type=int)
parser.add_argument("-b", "--bench", default=0, type=int)
parser.add_argument("-B", "--batched", action="store_true")
parser.add_argument("-d", "--display", default=None)
parser.add_argument("-D", "--decoders", default=None)
parser.add_argument("-O", "--order", default="BHWD")
parser.add_argument("-a", "--autodecode", action="store_true")
args = parser.parse_args()

source = gopen.open_source(args.input)

for i in xrange(args.skip):
    source.next()

sample = source.next()

utils.print_sample(sample)

if args.bench > 0:
    print
    start = time.time()
    for i in xrange(args.bench):
        source.next()
    total = time.time() - start
    print "sec/sample", total/args.bench

if args.display is not None:
    ion()
    keys = args.display.split(",")
    for i in range(1000):
        utils.print_sample(sample)
        clf()
        for j,key in enumerate(keys):
            subplot(1, len(keys), j+1)
            data = sample[key]
            if data.ndim==3 and data.shape[2]==1:
                data = data[:,:,0]
            if args.batched:
                data = data[0]
            gca().set_title("Key: "+key)
            imshow(data)
        show()
        raw_input()
        sample = source.next()
